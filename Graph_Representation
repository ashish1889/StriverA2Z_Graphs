//https://takeuforward.org/graph/graph-representation-in-c/

//Below code is for undirected weighted graph, using pair with target vertex and weight

#include <iostream>
#include<vector>
using namespace std;

int main()
{
   // std::cout<<"Hello World";
   
   int n, m;
    cin >> n >> m;
    // adjacency list for directed graph
    // time complexity: O(E)
    vector<pair<int,int>> adj[n+1];
    for(int i = 0; i < m; i++)
    {
        int u, v, wt;
        // u â€”> v
        cin >> u >> v >> wt;
        adj[u].push_back(make_pair(v,wt));
        adj[v].push_back(make_pair(u,wt));
        
    }
    
    for(int i = 0; i < m; i++)
    {
        if(i>0)
        cout<<"from node: "<<i<<"to->(node,weight) ";
        for(int j = 0;j<adj[i].size();j++){
            cout<<adj[i][j].first<<"->"<<adj[i][j].second<<" ";
        }
        
        cout<<"\n";
    }

    return 0;
}

i/p given-

5 6
1 2 3
1 3 2
2 4 4
3 4 1
3 5 6
4 5 3

o/p-
from node: 1to->(node,weight) 2->3 3->2 
from node: 2to->(node,weight) 1->3 4->4 
from node: 3to->(node,weight) 1->2 4->1 5->6 
from node: 4to->(node,weight) 2->4 3->1 5->3 
from node: 5to->(node,weight) 3->6 4->3 
